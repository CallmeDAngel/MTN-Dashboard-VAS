# Generated by Django 5.0.7 on 2024-10-14 10:43

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Dashboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='DataParser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='DataRepository',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('data_type', models.CharField(max_length=100)),
                ('size', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='DataSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=100)),
                ('data', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='utilisateur_set', related_query_name='utilisateur', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='utilisateur_set', related_query_name='utilisateur', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Security',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=100)),
                ('level', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='DataProcessor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_parse', models.JSONField()),
                ('data_parses', models.ManyToManyField(related_name='Traiter', to='Dashboard.dataparser')),
            ],
        ),
        migrations.AddField(
            model_name='dataparser',
            name='data_sources',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Traiter', to='Dashboard.datasource'),
        ),
        migrations.CreateModel(
            name='Employe',
            fields=[
                ('utilisateur_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Dashboard.utilisateur')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('Dashboard.utilisateur',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='KPI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('value', models.FloatField(default=0.0)),
                ('data_processor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Calculer', to='Dashboard.dataprocessor')),
            ],
        ),
        migrations.CreateModel(
            name='Scraper',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_source', models.CharField(max_length=100)),
                ('url_source', models.URLField()),
                ('data_repository', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='Dashboard.datarepository')),
            ],
        ),
        migrations.CreateModel(
            name='Plateforme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('url', models.URLField()),
                ('scraper', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='Dashboard.scraper')),
            ],
        ),
        migrations.AddField(
            model_name='datasource',
            name='scraper',
            field=models.ManyToManyField(related_name='Associer', to='Dashboard.scraper'),
        ),
        migrations.AddField(
            model_name='datarepository',
            name='security',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='Dashboard.security'),
        ),
        migrations.CreateModel(
            name='Widget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=100)),
                ('data', models.JSONField()),
                ('dashboard', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='Dashboard.dashboard')),
                ('kpi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Afficher', to='Dashboard.kpi')),
            ],
        ),
        migrations.AddField(
            model_name='dashboard',
            name='widgets',
            field=models.ManyToManyField(related_name='dashboards', to='Dashboard.widget'),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('consulted', models.BooleanField(default=False)),
                ('kpi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Cr√©er', to='Dashboard.kpi')),
                ('employe', models.ManyToManyField(related_name='Consulter', to='Dashboard.employe')),
            ],
        ),
        migrations.AddField(
            model_name='dashboard',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dashboards', to='Dashboard.employe'),
        ),
    ]
